services:
  # Node.js 애플리케이션
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: pbt-lms-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=magic7
      - DB_USER=magic7
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DIALECT=mysql
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d
      - SESSION_SECRET=${SESSION_SECRET}
      - MAX_FILE_SIZE=10485760
      - UPLOAD_DIR=./uploads
      - CLIENT_URL=http://localhost:3000
      - SWAGGER_ENABLED=true
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./tmp:/app/tmp
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - pbt-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pbt-lms.rule=Host(`localhost`)"
      - "traefik.http.routers.pbt-lms.entrypoints=web"

  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    platform: linux/amd64
    container_name: pbt-lms-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=magic7
      - MYSQL_USER=magic7
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - pbt-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis (캐싱 및 세션 저장용)
  redis:
    image: redis:7-alpine
    container_name: pbt-lms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pbt-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Adminer (데이터베이스 관리 도구)
  adminer:
    image: adminer:latest
    container_name: pbt-lms-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
    depends_on:
      - mysql
    networks:
      - pbt-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  pbt-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
